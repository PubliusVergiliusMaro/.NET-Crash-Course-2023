// <auto-generated />
using System;
using Exam_Task.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam_Task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230401173115_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam_Task.Database.Entities.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("GroupAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.LecturerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademicRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectFK")
                        .IsUnique()
                        .HasFilter("[SubjectFK] IS NOT NULL");

                    b.ToTable("Lecturers", (string)null);
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupFK")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupFK");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentFK");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.LecturerEntity", b =>
                {
                    b.HasOne("Exam_Task.Database.Entities.SubjectEntity", "Subject")
                        .WithOne("Lecturer")
                        .HasForeignKey("Exam_Task.Database.Entities.LecturerEntity", "SubjectFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.StudentEntity", b =>
                {
                    b.HasOne("Exam_Task.Database.Entities.GroupEntity", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.SubjectEntity", b =>
                {
                    b.HasOne("Exam_Task.Database.Entities.StudentEntity", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.GroupEntity", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.StudentEntity", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Exam_Task.Database.Entities.SubjectEntity", b =>
                {
                    b.Navigation("Lecturer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
